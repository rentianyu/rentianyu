[{"categories":["教程"],"content":" 本文由 简悦 SimpRead 转码， 原文地址 https://www.thisfaner.com/p/everything/ ","date":"2020-11-24","objectID":"/015_everything/:0:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"Everything Everything 安装好后，建议开启Everything 服务 Everything 服务可以索引 NTFS 分卷和监控 USN 日志。 这将可以让 Everything 以标准用户方式运行，而不用每次打开Everything都提示需要管理员权限( UAC )。 开启 Everything 服务： 工具 👉 选项 👉 常规 👉 取消以管理员运行，勾选 Everything 服务。 同时可以选择开启 搜索历史。 ","date":"2020-11-24","objectID":"/015_everything/:1:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"快捷键 通过热键打开 Everything 窗口有以下三种方式： 方式 说明 新建搜索口 总是打开一个新建的 Everything 搜索窗口。 打开搜索口 打开已存在的 Everything 搜索窗口，否则创建新的 Everything 搜索窗口。 切换搜索口 隐藏前台的 Everything 搜索窗口，否则激活后台的 Everything 搜索窗口，否则创建新的 Everything 搜索窗口。 禁用 Windows 默认热键，例如 Win + F： 进入开始菜单，打开 regedit。 进入注册表编辑器，转到： HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced 创建新字符串值 DisabledHotkeys。 设置 DisabledHotkeys 数据为您想要释放的字母，例如：F。 重启计算机。 在 Everything 中应用释放的热键 Win + F。 ","date":"2020-11-24","objectID":"/015_everything/:2:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"筛选器 筛选器是预定义的搜索选项，例如音频和视频文件类型 。 书签： 可以利用一下 ","date":"2020-11-24","objectID":"/015_everything/:3:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"运行历史 利用运行历史来 打开经常运行文件，Everything 记忆每次结果的运行次数。 在搜索框中按 Enter 已选择最高运行次数的结果。 手动设置运行次数 ： 选中一个文件或文件夹 👉 文件 👉 设置运行次数 以运行次数排序，右键点击列表空白处并点击排序-\u003e运行次数。 默认开启运行历史，可在选项中设置 使用 runcount:来搜索指定运行次数或运行次数范围。 搜索运行次数大于 100： runcount:\u003e100 搜索运行次数至少一次： runcount: 搜索运行次数在 10 与 20 之间： runcount:10-20 设置默认以运行次数排序： 在 “Everything”* 中，打开工具菜单，点击选项*。 点击首页页面。 更改排序方式为运行次数 (降序)。 点击确定。 ","date":"2020-11-24","objectID":"/015_everything/:4:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"搜索 Everything 搜索语法和正则表达式语法的区别与联系： 正则表达式默认覆盖搜索语法。搜索操作符、通配符、宏、修饰符和函数无法工作于正则表达式模式。 正则表达式必须从搜索菜单启用或使用搜索前缀 regex: 可以限定搜索某一分区，例如，搜索分区 D: 中文件和文件夹： d: 搜索分区 D: 或 E: 上 mp3 文件： d:|e: *.mp3 搜索分区 D: 上 jpg 或 png 文件： d: *.jpg|*.png 使用双引号以转义空格，搜索 C:\\Program Files 下文件和文件夹： \"c:\\program files\\\" 仅搜索文件： file: 仅搜索文件夹： folder: 限定搜索单个文件夹（以它为父文件夹的子文件夹）： parent:c:\\windows 使用 \\ 来搜索部分路径，例如，在以 documents 结尾文件夹中搜索文件和文件夹： documents\\ 使用空格以组合搜索条件，例如，在以 work 开头文件夹下搜索包含 order 的文件和文件夹： \\work order 搜索大于 1MB 的文件： size:\u003e1mb 搜索 D:\\music 下不包含 mp3 的文件夹： d:\\music\\ !child:mp3 ⭐ 利用 高级搜索框 来拼接最终的搜索字符串 指定文件目录搜索： 在检索条件中使用\\，可以指定查找位置 TDDOWNLOAD\\ abc 在所有TDDOWNLOAD文件夹下搜索包含abc字符的文件及文件夹 TDDOWNLOAD\\ *.jpg 在所有TDDOWNLOAD文件夹下搜索jpg后缀文件 F:\\TDDOWNLOAD\\ abc 在F:\\TDDOWNLOAD\\目录下搜索包含abc字符的文件及文件夹 F:\\TDDOWNLOAD\\ *.jpg 在F:\\TDDOWNLOAD\\目录下搜索jpg后缀文件 排除指定目录： 使用 ! （非）排除 排除指定目录：!绝对路径\\ 排除指定子目录：!子目录名称\\ !C:\\*Windows* !?:\\$RECYCLE.BIN* file:*.exe|*.lnk|*.ahk|*.bat|*.cmd !D:\\Scoop\\Applications\\shims !D:\\Scoop\\Applications\\shims\\ 操作符: space 与 (AND) | 或 (OR) ! 非 (NOT) \u003c \u003e 分组 \" \" 搜索引号内的词组. 修饰符： filelist:\u003cfn1|fn2|...\u003e 搜索 文件名列表 中的文件. type:\u003ctype\u003e 搜索指定的文件类型的文件和文件夹 file: 仅匹配文件. 函数： attrib:\u003cattributes\u003e 搜索指定的文件属性的文件和文件夹. attribdupe: 搜索含有相同属性的文件和文件夹. child:\u003cfilename\u003e 搜索包含匹配文件名文件或文件夹的文件夹。 attributes:\u003cattributes\u003e 搜索指定的文件属性的文件和文件夹. parent:\u003cpath\u003e 搜索指定路径下的文件和文件夹 (不包含子文件夹). Scoop安装的程序的最新版都在 current 快捷方式下，并且旧版中的exe文件仍然保存，这样对RunAny会造成问题 思路一： 通过目录限定。步骤复杂，并且还需解决软链接带来的问题 思路二： 让其只选择日期最新的exe （尝试了一下奴婢实现不了） 思路三： 求大佬教我解决方法 多关键词搜索示例： 123 abc 搜索包含123和abc的文件和文件夹 123|abc 搜索包含123或abc的文件和文件夹 *.jpg|*.flv .jpg | .flv 搜索jpg或flv后缀文件 （两种表示方式任选一种，第二种竖线|两边加空格） 竖线 |表示或，空格表示与，都可以多个连续使用 在使用之前，确保已经打开正则表达式选项（菜单Search → Enable Regex） 为了在搜索条件中包含空格，你可以使用双引号。 例如，\"foo bar\"只能匹配 foo bar，而不能匹配fooadbar、fooibar等等。 如何只显示二级目录内容，不显示多级子目录下文件？示例 C:\\New Folder\\ parents:2 ","date":"2020-11-24","objectID":"/015_everything/:5:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"重复文件 以下搜索函数可以搜索重复文件： 搜索函数 描述 dupe: 搜索含有相同文件名的文件和文件夹。 attribdupe: 搜索含有相同属性的文件和文件夹。按属性排序以显示最佳结果。 dadupe: 搜索含有相同访问时间的文件和文件夹。按访问时间排序以显示最佳结果。 dcdupe: 搜索含有相同创建时间的文件和文件夹。按创建时间排序以显示最佳结果。 dmdupe: 搜索含有相同修改时间的文件和文件夹。按修改时间排序以显示最佳结果。 namepartdupe: 搜索含有相同名称部分的文件和文件夹 (不包含扩展名)。 sizedupe: 搜索大小相同的文件和文件夹。按大小排序以显示最佳结果。 重复文件将在完整索引中搜索，而不是当前搜索结果。 搜索并以重复属性类型排序以显示最佳结果。。 Everything 不会检测文件内容。使用重复搜索函数作为辅助。 实用例子： dupe: .mp4 # 这个很实用 size:\u003e1gb sizedupe: 补充： empty: 搜索空文件夹 ","date":"2020-11-24","objectID":"/015_everything/:6:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"与日期相关的搜索 函数/缩写 描述 recentchange:\u003cdate\u003e ,rc:\u003cdate\u003e 搜索指定最近修改日期的文件和文件夹。 dateaccessed:\u003cdate\u003e , da:\u003cdate\u003e 搜索指定访问时间的文件和文件夹。 datecreated:\u003cdate\u003e ,dc:\u003cdate\u003e 搜索指定创建日期的文件和文件夹。 datemodified:\u003cdate\u003e , dm:\u003cdate\u003e 搜索指定修改日期的文件和文件夹。 daterun:\u003cdate\u003e , dr:\u003cdate\u003e 搜索指定打开时间的文件和文件夹。 快速搜索今日修改的文件（监控系统实时变更）： dm:today 搜索这周创建的文件和文件夹： dc:thisweek 搜索创建于2014 年 8 月 1 日到 2014 年 8 月 31 日的文件和文件夹: dc:1/8/2014-31/8/2014 ","date":"2020-11-24","objectID":"/015_everything/:7:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"正则表达式 正则表达式默认覆盖搜索语法。搜索操作符、通配符、宏、修饰符和函数无法工作于正则表达式模式。 正则表达式必须从搜索菜单启用或使用搜索前缀 regex: 正则表达式 描述 a|b 匹配 a 或 b gr(a|e)y 匹配 gray 或 grey . 匹配任一字符 [abc] 匹配任一字符：a 或 b 或 c [^abc] 匹配任一字符, 但不包括 a、b、c [a-z] 匹配从 a 到 z 之间的任一字符 [a-zA-Z] 匹配从 a 到 z, 及从 A 到 Z 之间的任一字符 ^ 匹配文件名的头部 $ 匹配文件名的尾部 * 匹配前一项内容 0 或多次 ? 匹配前一项内容 0 或 1 次 + 匹配前一项内容 1 或多次 {x} 匹配前一项内容 x 次 {x,} 匹配前一项内容 x 或多次 {x,y} 匹配前一项内容次数介于 x 和 y 之间 ","date":"2020-11-24","objectID":"/015_everything/:8:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"搜索历史 搜索历史是先前搜索记录列表。 搜索历史默认禁用。 当启用搜索历史后，您可以在搜索框通过组合键 Ctrl + Space 列举搜索建议。 ","date":"2020-11-24","objectID":"/015_everything/:9:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"文件夹索引 文件夹索引让 Everything 可以索引任何文件系统文件夹。 索引的文件夹甚至可以离线但仍旧可以通过 Everything 索引。 例如，通过文件夹索引您可以索引以下： 网络分享或映射的网络分区。 FAT32 和其他分卷。 任何物理文件夹 。 添加方式： 工具 👉 选项 👉 索引 👉 … 索引的文件夹离线或不存在时会出现什么情况？ 文件夹索引将会保持不变。 但是，强制重建索引将会显示此文件夹为空。 Everything 将会在指定的时间或周期时继续重扫描此文件夹，但仅在文件夹存在时更新索引。 离线文件夹图标和文件信息显示将在数秒后超时。 您可以在文件夹存在时按 F5 来刷新缓存。 ","date":"2020-11-24","objectID":"/015_everything/:10:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"文件列表 File Lists - voidtools Everything 文件列表(EFU) 推荐使用于离线文件或不会变动的文件，例如 CDROM、DVDROM 或只读 NAS。 EFU 文件是包含文件名、大小、日期以及属性列表的逗号分隔值 (CSV) 文件。 文件列表可以通过 Everything 打开或包含到 Everything 索引。 文件列表可以被搜索并可以立即按大小、日期或属性排序。 如何创建 EFU 文件列表？ 在 Everything” 中，打开工具菜单，点击文件列表编辑器…。 在文件列表编辑器中，拖拽文件到列表以添加到文件列表。 您也可以从编辑菜单添加文件和文件夹。 添加完成后，打开文件菜单，点击保存。 函数 描述 filelist:\u003clist\u003e 搜索文件名列表中的文件。 filelistfilename:\u003clist\u003e 搜索文件名列表中的文件和文件夹。 frn:\u003clist\u003e 搜索指定文件索引号的文件和文件夹。 其他： 使用（系统）计划任务更新文件列表 包含文件列表到 the Everything 索引：工具 👉 选项 👉 文件列表 👉 添加 ","date":"2020-11-24","objectID":"/015_everything/:11:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"Everything高级设置 (ini文件) 文件 Everything.ini 保存有全部的 Everything 设置。 一般来说， 文件 Everything.ini 将保存在 Everything.exe 相同目录 。 对于实用Scoop安装 everything的用户，需要更改..\\scoop\\Applications\\persist\\everything\\ 目录下的ini文件。（persist目录是scoop专门用来保存用户配置的目录） 注意：文件 Everything.ini 是自动生成的。Everything 运行过程中对 Everything.ini 的变更将丢失。 请从托盘图标中退出 “Everything” 然后再更改 Everything.ini 文件。 Everything.ini 文件编码格式为 UTF-8。 语法： [section] key=value ","date":"2020-11-24","objectID":"/015_everything/:12:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"实现搜索排序 搜索相关设置 sort 最后的排序。如果 home_sort 为 1，则在打开新的搜索窗口时将还原此排序。如果always_keep_sort 为 0，则如果是慢速排序，则将忽略此值。 可以是下列排序类型之一： Type Description 0 Name 名称 1 Path 路径 2 Extension 扩展名 3 Type 类型 4 Date modified 修改日期 5 Date created 创建日期 6 Date accessed 访问日期 7 Attributes 属性 8 Date recently changed 最近更改日期 9 Run count 运行计数 10 Date run 日期运行 11 File list filename 文件列表文件名 sort_ascending 升序或降序排序。设置为 1 以升序排序。设置为 0 以降序排序。 Everything如何实现搜索时直接以修改时间为默认排序？ 找到 Everything.ini，修改如下几项参数的值为以下值： sort=4 sort_ascending=0 always_keep_sort=1 home_sort=0 如果找到正确的 Everything.ini 文件，并按上文的操作来进行就可以更改成功。 Everything_SetSort | Search Everything中文版 ","date":"2020-11-24","objectID":"/015_everything/:12:1","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"补充 搜索非NTFS格式文件： 比如U盘，只需手动将其加入索引即可。 工具👉选项👉索引👉文件夹👉添加👉选择U盘对应的盘符 对文件中的内容进行搜索：利用 content:\u003ctext\u003e 默认UTF-8格式文本内容 由于现在用户经常使用ANSI和UNICODE两种不同的编码方式标准，因此这个参数的搜索规则是：“搜索路径” ansicontent:\"搜索关键词”，或者\"搜索路径” utf16content:\"搜索关键词”。比如我们要在E盘的ABC这个文件夹目录中搜索\"黑客\"这个关键词，那么就输入E:abc utf16content:\"黑客\"这一行命令，或者E:abc ansicontent:\"黑客\"这一行命令即可 是 官方帮助文档：Everything - voidtools ","date":"2020-11-24","objectID":"/015_everything/:13:0","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["教程"],"content":"语法 Searching - voidtools 操作符： 通配符：仅有 * 和 ? 宏：无需添加额外参数 zip:搜索压缩文件， doc: 搜索文档文件 类似 exe: 、pic:、audio:、video: 修饰符：示例file: 仅匹配文件 函数：大多有参数，并且有函数语法 函数语法： function:value 等于某设定值。 function:\u003c=value 小于等于某设定值。 `function: | 小于某设定值。 | | | function:=value 等于某设定值。 function:\u003evalue 大于某设定值。 function:\u003e=value 大于等于某设定值。 function:start..end 在起始值和终止值的范围内。 function:start-end 在起始值和终止值的范围内。 大小语法： size[kb|mb|gb] 大小常数： empty tiny 0 KB \u003c 大小 \u003c= 10 KB small 10 KB \u003c 大小 \u003c= 100 KB medium 100 KB \u003c 大小 \u003c= 1 MB large 1 MB \u003c 大小 \u003c= 16 MB huge 16 MB \u003c 大小 \u003c= 128 MB gigantic 大小 \u003e 128 MB unknown 日期语法 year month/year 或 year/month 取决于本地设置 day/month/year, month/day/year 或 year/month/day 取决于本地设置 YYYY[-MM[-DD[Thh[:mm[:ss[.sss]]]]]] YYYYMM[DD[Thh[mm[ss[.sss]]]]] 日期常数： today yesterday january|february|march|april|may|june|july|august|september|october|november|december jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec sunday|monday|tuesday|wednesday|thursday|friday|saturday sun|mon|tue|wed|thu|fri|sat unknown ","date":"2020-11-24","objectID":"/015_everything/:13:1","tags":["Everything","技巧"],"title":"Everything使用教程","uri":"/015_everything/"},{"categories":["备份"],"content":"0. 注意 以下只用于Ubuntu系统 ","date":"2020-11-15","objectID":"/014_linux_soft/:1:0","tags":["Linux","安装"],"title":"一些Linux软件的安装","uri":"/014_linux_soft/"},{"categories":["备份"],"content":"1. docker # 安装官方docker curl -fsSL get.docker.com -o get-docker.sh # 使用镜像源 sudo sh get-docker.sh --mirror Aliyun sudo sh get-docker.sh --mirror AzureChinaCloud 参考网址：https://yeasy.gitbook.io/docker_practice/install/ubuntu ","date":"2020-11-15","objectID":"/014_linux_soft/:2:0","tags":["Linux","安装"],"title":"一些Linux软件的安装","uri":"/014_linux_soft/"},{"categories":["备份"],"content":"2.nodejs 安装最新长期服务版 # root 用户执行 curl -sL https://deb.nodesource.com/setup_lts.x | bash - apt-get install -y nodejs 参考网址：https://github.com/nodesource/distributions#installation-instructions ","date":"2020-11-15","objectID":"/014_linux_soft/:3:0","tags":["Linux","安装"],"title":"一些Linux软件的安装","uri":"/014_linux_soft/"},{"categories":["收集"],"content":"1.爱奇艺 简介：爱奇艺VIP签到、VIP日常任务、每日三次抽奖，注意：这个只针对爱奇艺VIP用户。 方式：云函数、本地 更新时间： 地址：https://www.sunjiwen.com/archives/295.html ","date":"2020-11-15","objectID":"/013_auto/:1:0","tags":["汇总","签到"],"title":"汇总一些自动签到项目","uri":"/013_auto/"},{"categories":["收集"],"content":"2.京豆 简介：自动完成京东部分任务得京豆。 方式：GitHub Actions、服务器、云函数、本地 地址：多方式：https://github.com/lxk0301/jd_scripts 服务器：https://github.com/EvineDeng/jd-base GitHub Actions：https://github.com/rentianyu/JD_tools ","date":"2020-11-15","objectID":"/013_auto/:2:0","tags":["汇总","签到"],"title":"汇总一些自动签到项目","uri":"/013_auto/"},{"categories":["收集"],"content":"3.哔哩哔哩 简介：哔哩哔哩(B站)自动完成每日任务， 投币，点赞，直播签到，自动兑换银瓜子为硬币，自动送出即将过期礼物，漫画App签到，大会员领取B币卷等。每天获得65点经验，助你快速升级到Lv6。 方式：GitHub Actions 地址：https://github.com/rentianyu/BilibiliTask ","date":"2020-11-15","objectID":"/013_auto/:3:0","tags":["汇总","签到"],"title":"汇总一些自动签到项目","uri":"/013_auto/"},{"categories":["收集"],"content":"4.一个收集云函数的蓝奏云 简介：联想社区、有道云笔记、贴吧、时光相册、天翼云盘、网易云音乐、有道云笔记、腾讯视频 方式：云函数 地址：https://ww.lanzous.com/b015dcrmb 提取码：66v7 ","date":"2020-11-15","objectID":"/013_auto/:4:0","tags":["汇总","签到"],"title":"汇总一些自动签到项目","uri":"/013_auto/"},{"categories":["收集"],"content":"5.sspanel面板的机场流量签到 简介：sspanel面板的机场流量签到 方式：云函数 地址：https://github.com/ne-21/sspanel-automaticcheckin ","date":"2020-11-15","objectID":"/013_auto/:5:0","tags":["汇总","签到"],"title":"汇总一些自动签到项目","uri":"/013_auto/"},{"categories":["收集"],"content":"6.云函数的 100 种玩法 简介：本项目搜集了 云函数/Serverless 的 100 种玩法，签到，打卡，云盘，刷金币等各种应用集合。 方式：云函数 地址：https://github.com/tinafangkunding/awesome-serverless ","date":"2020-11-15","objectID":"/013_auto/:6:0","tags":["汇总","签到"],"title":"汇总一些自动签到项目","uri":"/013_auto/"},{"categories":["教程"],"content":"一、说明 ​ PowerShell的美化从两方面入手，一是命令行方面，这个安装 oh-my-posh 来解决，另一个就是字体和配色，按照我的设置解决。 ​ 上个图 ","date":"2020-11-12","objectID":"/012_powershell/:1:0","tags":["PowerShell","oh-my-posh"],"title":"PowerShell的美化","uri":"/012_powershell/"},{"categories":["教程"],"content":"二、oh-my-posh的安装与配置 ","date":"2020-11-12","objectID":"/012_powershell/:2:0","tags":["PowerShell","oh-my-posh"],"title":"PowerShell的美化","uri":"/012_powershell/"},{"categories":["教程"],"content":"2.1 安装 posh-git 和 oh-my-posh 模块 ​ PowerShell运行以下命令 Install-Module posh-git -Scope CurrentUser Install-Module oh-my-posh -Scope CurrentUser ","date":"2020-11-12","objectID":"/012_powershell/:2:1","tags":["PowerShell","oh-my-posh"],"title":"PowerShell的美化","uri":"/012_powershell/"},{"categories":["教程"],"content":"2.2 修改PowerShell配置文件 ​ PowerShell运行以下命令 # 如果之前没有配置文件，就新建一个 PowerShell 配置文件 if (!(Test-Path -Path $PROFILE )) { New-Item -Type File -Path $PROFILE -Force } # 修改配置文件 echo 'Import-Module posh-git Import-Module oh-my-posh Set-Theme Star cd ~\\Desktop ' \u003e $PROFILE ","date":"2020-11-12","objectID":"/012_powershell/:2:2","tags":["PowerShell","oh-my-posh"],"title":"PowerShell的美化","uri":"/012_powershell/"},{"categories":["教程"],"content":"三、字体和配色 ","date":"2020-11-12","objectID":"/012_powershell/:3:0","tags":["PowerShell","oh-my-posh"],"title":"PowerShell的美化","uri":"/012_powershell/"},{"categories":["教程"],"content":"3.1 使用更纱黑体 ​ 微软商店 或者 GitHub 下载更纱黑体。然后右击PowerShell窗口的左上角图标，点击属性，如下图。 ​ ​ 再按下图启用字体。 ​ ","date":"2020-11-12","objectID":"/012_powershell/:3:1","tags":["PowerShell","oh-my-posh"],"title":"PowerShell的美化","uri":"/012_powershell/"},{"categories":["教程"],"content":"3.2 修改背景色 ​ 如下图修改背景色 ​ ​ 最好将布局也改一下 ​ ","date":"2020-11-12","objectID":"/012_powershell/:3:2","tags":["PowerShell","oh-my-posh"],"title":"PowerShell的美化","uri":"/012_powershell/"},{"categories":["教程"],"content":"一、前言 ​ 彼岸桌面 是一个很好的收集壁纸的网站，壁纸高清，我很喜欢，并且还赞助了会员。这次的爬取对象就是它了。 ​ 这次的流程是先写爬虫脚本，然后放在VPS上爬取地址，最后用COLAB下载。 ","date":"2020-11-11","objectID":"/011_pa_netbian/:1:0","tags":["爬虫","图片"],"title":"记一次爬取图片的历程","uri":"/011_pa_netbian/"},{"categories":["教程"],"content":"二、网站分析与确定爬取流程 分析网页网址 ​ 比如，我想爬取 风景 类的壁纸，先进入风景专区，然后点击一张图片的地址，发现此时的图片预览图是原图！！！那就可以确定爬取流程了。先以一张图为例。 1.1 找到图片分类网址 http://www.netbian.com/fengjing 1.2 找到图片介绍地址和真实地址 图片介绍地址：http://www.netbian.com/desk/23006.htm 图片真实地址：http://img.netbian.com/file/2020/1108/1da1eab002604a8adcc33d8103b5758d.jpg 确定爬取流程 2.1 风景分类界面获取介绍图片代号 2.2 图片介绍界面获取图片真实地址 ","date":"2020-11-11","objectID":"/011_pa_netbian/:2:0","tags":["爬虫","图片"],"title":"记一次爬取图片的历程","uri":"/011_pa_netbian/"},{"categories":["教程"],"content":"三、写脚本 ​ 以下为获取风景下图片链接的bash脚本，第一页的图片请单独处理。 #!/bin/bash # 以下代码只处理第2-203页，第一页的图片请自行处理 # 定义种类kind为fengjing kind=fengjing # 定义页码page为2 3 .. 203 for page in $(seq 2 203) do # 拼接种类页面链接kind_link kind_link=\"http://www.netbian.com/$kind/index_$page.htm\" # 获取该页所有图片编号pic_num_list pic_num_list=$(wget -qO- $kind_link | grep -aoP \"(?\u003c=href=\\\"/desk/).*?(?=.htm)\") # 定义图片编号pic_num for pic_num in $pic_num_list do # 拼接图片信息页面链接pic_info_link pic_info_link=http://www.netbian.com/desk/$pic_num.htm # 获取图片地址pic_link pic_link=$(wget -qO- $pic_info_link | grep -aoP -m 1 \"http://img.netbian.com/file/20.*jpg(?=\\\" alt)\") # 打印图片地址 echo $pic_link # 保存图片地址到文件 echo $pic_link \u003e\u003e ${kind}_down.txt done done 注意 grep -a可以查找二进制中的文字 grep -m 1只保留第一次匹配 用wget -qO-而不用curl -s的原因是之后的grep -m 1查找到之后会堵塞通道造成错误 ","date":"2020-11-11","objectID":"/011_pa_netbian/:3:0","tags":["爬虫","图片"],"title":"记一次爬取图片的历程","uri":"/011_pa_netbian/"},{"categories":["教程"],"content":"四、下载图片 ​ 因为完全下载所需的空间需要几G之上，我的VPS不足以持，因此就用到了Google家的COLAB 将爬取的下载链接上传到 谷歌网盘 的某个目录 登录 COLAB 并新建笔记本，按照下图配置，然后依次运行即可 注意 COLAB 中 !开头表示运行SHELL命令 # 挂载谷歌硬盘 from google.colab import drive drive.mount('/content/drive') # 安装aria2 !sudo apt install uget aria2 # cd 到文件夹 !cd \"/content/drive/Shared drives/1/fj\" !aria2c -i fengjing_down.txt !zip fengjing.zip * ","date":"2020-11-11","objectID":"/011_pa_netbian/:4:0","tags":["爬虫","图片"],"title":"记一次爬取图片的历程","uri":"/011_pa_netbian/"},{"categories":["教程"],"content":"五、成品及反思 成品：彼岸桌面(http://netbian.com)_风景图片打包.zip 此次抓取中，有几点需要注意， 下载网页源码之后可以找到文字，但用grep找不到，就是二进制文件的问题，加参数-a即可。 grep找到多个匹配，加参数-m 即可只保留第一个。 curl和grep连用有时会导致通道堵塞，使用wget -qO-全下载之后再grep即可。 COLAB中使用shell命令极大的增加了能力，并且可以挂载谷歌网盘，极大得方便文件的传输。 ","date":"2020-11-11","objectID":"/011_pa_netbian/:5:0","tags":["爬虫","图片"],"title":"记一次爬取图片的历程","uri":"/011_pa_netbian/"},{"categories":["教程"],"content":"一、WSL的介绍 WSL是什么：运行在win系统下的Linux子系统 WSL的版本：版本有两种，WSL一代 和WSL二代，相比一代而言，二代运行于虚拟机上，更接近于真实的Linux系统 来个截图 ","date":"2020-11-07","objectID":"/010_wsl/:1:0","tags":["wsl"],"title":"WSL (微软Linux子系统) 的安装与使用","uri":"/010_wsl/"},{"categories":["教程"],"content":"二、WSL 的安装 以下安装方法为个人总结，有关详细信息和注意问题，请阅读微软官方文档：适用于 Linux 的 Windows 子系统安装指南 (Windows 10) WSL两个版本的区别，可以阅读有关 比较WSL2 和WSL1 的详细信息。 ","date":"2020-11-07","objectID":"/010_wsl/:2:0","tags":["wsl"],"title":"WSL (微软Linux子系统) 的安装与使用","uri":"/010_wsl/"},{"categories":["教程"],"content":"（一）安装WSL一代 启用WSL功能 以管理员身份打开 PowerShell 并运行： dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 去微软商店搜索Linux，安装自己适用的系统 重启win系统即可安装完成 ","date":"2020-11-07","objectID":"/010_wsl/:2:1","tags":["wsl"],"title":"WSL (微软Linux子系统) 的安装与使用","uri":"/010_wsl/"},{"categories":["教程"],"content":"（二）安装WSL二代 启用 WSL功能和虚拟机功能 以管理员身份打开 PowerShell 并运行： dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 重启win系统 安装Linux内核更新包 下载并安装最新包：适用于 x64 计算机的 WSL2 Linux 内核更新包 将 WSL 2 设置为默认版本 以管理员身份打开 PowerShell 并运行： wsl --set-default-version 2 在微软商店搜索Linux，安装自己适用的系统 重启win系统 ","date":"2020-11-07","objectID":"/010_wsl/:2:2","tags":["wsl"],"title":"WSL (微软Linux子系统) 的安装与使用","uri":"/010_wsl/"},{"categories":["教程"],"content":"三、优化建议 ​ 此为我自己的优化，仅供参考。 ","date":"2020-11-07","objectID":"/010_wsl/:3:0","tags":["wsl"],"title":"WSL (微软Linux子系统) 的安装与使用","uri":"/010_wsl/"},{"categories":["教程"],"content":"（一）安装Windows Terminal来美化终端 在微软商店搜索Windows Terminal并安装 其他详细信息请阅读 安装 Windows 终端 ","date":"2020-11-07","objectID":"/010_wsl/:3:1","tags":["wsl"],"title":"WSL (微软Linux子系统) 的安装与使用","uri":"/010_wsl/"},{"categories":["教程"],"content":"（二）设置默认用户为root 先获取已安装的子系统名称和版本 以管理员身份打开 PowerShell 并运行： wsl -l -v ​ NAME对应的值便是已安装的子系统名称 ​ VERSION是对应系统的WSL版本 设置默认用户为root 以管理员身份打开 PowerShell 并运行： ubuntu config --default-user root 注意 上述命令中，ubuntu是第一步中获取的NAME值 ","date":"2020-11-07","objectID":"/010_wsl/:3:2","tags":["wsl"],"title":"WSL (微软Linux子系统) 的安装与使用","uri":"/010_wsl/"},{"categories":["教程"],"content":"（三）WSL 1和WSL 2版本的无缝转换 先获取已安装的子系统名称和版本 以管理员身份打开 PowerShell 并运行： wsl -l -v ​ NAME对应的值便是已安装的子系统名称 ​ VERSION是对应系统的WSL版本 设置对应系统的版本 wsl --set-version ubuntu 2 注意 上述命令中，是以我的Ubuntu系统为例，把WSL版本换为二代，两版本转换的前提是WSL 2版本环境已正确配置 ","date":"2020-11-07","objectID":"/010_wsl/:3:3","tags":["wsl"],"title":"WSL (微软Linux子系统) 的安装与使用","uri":"/010_wsl/"},{"categories":["教程"],"content":"四、有关文章 WSL的安装：适用于 Linux 的 Windows 子系统安装指南 (Windows 10) 有关比较 WSL 2 和 WSL 1 的详细信息：比较 WSL 2 和 WSL 1 设置WSL普通用户账号密码：为新的 Linux 分发版创建用户帐户和密码 安装Windows Terminal：安装 Windows 终端 WSL有关命令：适用于 Linux 的 Windows 子系统的命令参考 ","date":"2020-11-07","objectID":"/010_wsl/:4:0","tags":["wsl"],"title":"WSL (微软Linux子系统) 的安装与使用","uri":"/010_wsl/"},{"categories":["备份"],"content":"一、FIsh 的安装与简单配置 介绍：ArchLinux 上的 fish 简体中文 安装 apt install fish 设置为默认shell # 完整的Linux系统请使用fish真实路径 chsh -s $(which fish) # termux设为默认shell chsh -s fish 去除欢迎语 fish -c \"set -U fish_greeting\" 定义一些命令到Fish配置文件 mkdir -p ~/.config/fish # fish 的配置文件 cat \u003e ~/.config/fish/config.fish \u003c\u003cEOF alias apti='apt -y install' alias aptr='apt -y remove' alias apts='apt search' alias aa='apt update -y ; apt upgrade -y ; apt autoremove -y' alias lsa='ls -a' alias ..='cd ..; ls -a' alias ll='ls -al' alias gitc='git clone' alias gitp='git add . ; git commit -m auto-push ; git push ; echo push成功' alias myip='curl ifconfig.me' EOF Fish的简单语法 # 定义变量 set t 123 # 相当于bash的 t=123 # 括号内执行 grep 1 (ls) # 相当于bash的 grep 1 $(ls) if语句。 if grep fish /etc/shells echo Found fish else if grep bash /etc/shells echo Found bash else echo Got nothing end switch语句。 switch (uname) case Linux echo Hi Tux! case Darwin echo Hi Hexley! case FreeBSD NetBSD DragonFly echo Hi Beastie! case '*' echo Hi, stranger! end while循环。 while true echo \"Loop forever\" end for循环。 for file in *.txt cp $file $file.bak end Fish 的函数用来封装命令，或者为现有的命令起别名。 function ll ls -lhG $argv end 上面代码定义了一个ll函数。命令行执行这个函数以后，就可以用ll命令替代ls -lhG。其中，变量$argv表示函数的参数。 下面是另一个例子。 function ls command ls -hG $argv end 以上引用于阮一峰的 Fish shell 入门教程 ","date":"2020-11-05","objectID":"/009_fish_omf/:1:0","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"二、Oh-my-fish 的安装与简单用法 介绍：Oh-my-fish 官方中文文档 安装 curl -L https://get.oh-my.fish | fish 简单使用 # 列出已安装的和可安装的主题 omf theme # 安装 ays 主题 omf install ays # 更换主题为已安装的 cbjohnson 主题 omf theme cbjohnson # 检查 omf 是否有错误 omf doctor # 卸载 omf omf destroy 注意 文章最下方有所有主题的截图，完全是手工截图，真的是累啊 ","date":"2020-11-05","objectID":"/009_fish_omf/:2:0","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"三、Fish 与 Oh-my-fish 的卸载与清理配置文件 注意 卸载 Fish之前建议先卸载 Oh-my-fish 完全卸载Oh-my-fish # fish 环境下运行以下命令 omf destroy rm -r (find ~ -name omf) 完全卸载fish 注意 卸载 Fish之前一定要修改当前默认shell不是fish # 修改默认终端为bash chsh -s $(which bash) # Linux 系统 chsh -s bash # Termux # 完全卸载fish # bash 环境下运行 apt purge -y fish apt autoremove rm -r $(find ~ -name fish) ","date":"2020-11-05","objectID":"/009_fish_omf/:3:0","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"四、Oh-my-fish 的所有主题截图 注意 以下是在WSL的Ubuntu20 下的效果，如果你也是，但凡我标注了Error的主题，请不要尝试 我之前用的是ays主题，现在用的是numist主题 ","date":"2020-11-05","objectID":"/009_fish_omf/:4:0","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"1 agnoster ","date":"2020-11-05","objectID":"/009_fish_omf/:4:1","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"2 aight ","date":"2020-11-05","objectID":"/009_fish_omf/:4:2","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"3 ays ","date":"2020-11-05","objectID":"/009_fish_omf/:4:3","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"4 barracuda（termux专用） ","date":"2020-11-05","objectID":"/009_fish_omf/:4:4","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"5 batman ","date":"2020-11-05","objectID":"/009_fish_omf/:4:5","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"6 beloglazov ","date":"2020-11-05","objectID":"/009_fish_omf/:4:6","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"7 bira ","date":"2020-11-05","objectID":"/009_fish_omf/:4:7","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"8 bobthefish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:8","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"9 bongnoster ","date":"2020-11-05","objectID":"/009_fish_omf/:4:9","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"10 boxfish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:10","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"11 budspencer ","date":"2020-11-05","objectID":"/009_fish_omf/:4:11","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"12 cbjohnson ","date":"2020-11-05","objectID":"/009_fish_omf/:4:12","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"13 chain ","date":"2020-11-05","objectID":"/009_fish_omf/:4:13","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"14 clearance ","date":"2020-11-05","objectID":"/009_fish_omf/:4:14","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"15 cmorrell ","date":"2020-11-05","objectID":"/009_fish_omf/:4:15","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"16 coffeeandcode ","date":"2020-11-05","objectID":"/009_fish_omf/:4:16","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"17 cor (emoji-clock Error) 无 ","date":"2020-11-05","objectID":"/009_fish_omf/:4:17","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"18 cyan (math: Error) ","date":"2020-11-05","objectID":"/009_fish_omf/:4:18","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"19 dangerous ( [I] 提示) ","date":"2020-11-05","objectID":"/009_fish_omf/:4:19","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"20 default ","date":"2020-11-05","objectID":"/009_fish_omf/:4:20","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"21 dmorrell ","date":"2020-11-05","objectID":"/009_fish_omf/:4:21","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"22 doughsay ","date":"2020-11-05","objectID":"/009_fish_omf/:4:22","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"23 eclm ","date":"2020-11-05","objectID":"/009_fish_omf/:4:23","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"24 edan ","date":"2020-11-05","objectID":"/009_fish_omf/:4:24","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"25 eden ","date":"2020-11-05","objectID":"/009_fish_omf/:4:25","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"26 emoji-powerline ","date":"2020-11-05","objectID":"/009_fish_omf/:4:26","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"27 es ","date":"2020-11-05","objectID":"/009_fish_omf/:4:27","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"28 fishbone ","date":"2020-11-05","objectID":"/009_fish_omf/:4:28","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"29 fishface ","date":"2020-11-05","objectID":"/009_fish_omf/:4:29","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"30 fishy-drupal ","date":"2020-11-05","objectID":"/009_fish_omf/:4:30","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"31 fisk ","date":"2020-11-05","objectID":"/009_fish_omf/:4:31","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"32 flash ","date":"2020-11-05","objectID":"/009_fish_omf/:4:32","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"33 fox ","date":"2020-11-05","objectID":"/009_fish_omf/:4:33","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"34 gentoo ","date":"2020-11-05","objectID":"/009_fish_omf/:4:34","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"35 gianu ","date":"2020-11-05","objectID":"/009_fish_omf/:4:35","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"36 gitstatus ","date":"2020-11-05","objectID":"/009_fish_omf/:4:36","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"37 gnuykeaj ","date":"2020-11-05","objectID":"/009_fish_omf/:4:37","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"38 godfather ","date":"2020-11-05","objectID":"/009_fish_omf/:4:38","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"39 graystatus ","date":"2020-11-05","objectID":"/009_fish_omf/:4:39","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"40 harleen ","date":"2020-11-05","objectID":"/009_fish_omf/:4:40","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"41 idan ","date":"2020-11-05","objectID":"/009_fish_omf/:4:41","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"42 integral ","date":"2020-11-05","objectID":"/009_fish_omf/:4:42","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"43 jacaetevha ","date":"2020-11-05","objectID":"/009_fish_omf/:4:43","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"44 johanson ","date":"2020-11-05","objectID":"/009_fish_omf/:4:44","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"45 kawasaki ","date":"2020-11-05","objectID":"/009_fish_omf/:4:45","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"46 krisleech ","date":"2020-11-05","objectID":"/009_fish_omf/:4:46","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"47 l ","date":"2020-11-05","objectID":"/009_fish_omf/:4:47","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"48 lambda ","date":"2020-11-05","objectID":"/009_fish_omf/:4:48","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"49 lavender ","date":"2020-11-05","objectID":"/009_fish_omf/:4:49","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"50 lolfish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:50","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"51 mars ","date":"2020-11-05","objectID":"/009_fish_omf/:4:51","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"52 mish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:52","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"53 mokou ","date":"2020-11-05","objectID":"/009_fish_omf/:4:53","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"54 mtahmed ","date":"2020-11-05","objectID":"/009_fish_omf/:4:54","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"55 nai ","date":"2020-11-05","objectID":"/009_fish_omf/:4:55","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"56 nelsonjchen ","date":"2020-11-05","objectID":"/009_fish_omf/:4:56","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"57 neolambda ","date":"2020-11-05","objectID":"/009_fish_omf/:4:57","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"58 numist ","date":"2020-11-05","objectID":"/009_fish_omf/:4:58","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"59 ocean ","date":"2020-11-05","objectID":"/009_fish_omf/:4:59","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"60 one ","date":"2020-11-05","objectID":"/009_fish_omf/:4:60","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"61 pastfish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:61","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"62 perryh ","date":"2020-11-05","objectID":"/009_fish_omf/:4:62","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"63 pie (Error) ","date":"2020-11-05","objectID":"/009_fish_omf/:4:63","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"64 plain (Error) 无 ","date":"2020-11-05","objectID":"/009_fish_omf/:4:64","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"65 pure ","date":"2020-11-05","objectID":"/009_fish_omf/:4:65","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"66 pygmalion ","date":"2020-11-05","objectID":"/009_fish_omf/:4:66","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"67 random 随机主题 ","date":"2020-11-05","objectID":"/009_fish_omf/:4:67","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"68 randomrussel ","date":"2020-11-05","objectID":"/009_fish_omf/:4:68","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"69 redfish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:69","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"70 red-snapper ","date":"2020-11-05","objectID":"/009_fish_omf/:4:70","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"71 rider ","date":"2020-11-05","objectID":"/009_fish_omf/:4:71","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"72 robbyrussell ","date":"2020-11-05","objectID":"/009_fish_omf/:4:72","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"73 sashimi ","date":"2020-11-05","objectID":"/009_fish_omf/:4:73","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"74 scorphish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:74","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"75 separation ","date":"2020-11-05","objectID":"/009_fish_omf/:4:75","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"76 shellder ","date":"2020-11-05","objectID":"/009_fish_omf/:4:76","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"77 simple-ass-prompt ","date":"2020-11-05","objectID":"/009_fish_omf/:4:77","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"78 simplevi ","date":"2020-11-05","objectID":"/009_fish_omf/:4:78","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"79 slacker ","date":"2020-11-05","objectID":"/009_fish_omf/:4:79","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"80 slavic-cat ","date":"2020-11-05","objectID":"/009_fish_omf/:4:80","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"81 solarfish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:81","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"82 spacefish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:82","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"83 sushi ","date":"2020-11-05","objectID":"/009_fish_omf/:4:83","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"84 syl20bnr ","date":"2020-11-05","objectID":"/009_fish_omf/:4:84","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"85 taktoa ","date":"2020-11-05","objectID":"/009_fish_omf/:4:85","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"86 technopagan (moonmoji Error) 无 ","date":"2020-11-05","objectID":"/009_fish_omf/:4:86","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"87 toaster ","date":"2020-11-05","objectID":"/009_fish_omf/:4:87","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"88 tomita ","date":"2020-11-05","objectID":"/009_fish_omf/:4:88","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"89 trout (有点慢，需要安装rbenv) ","date":"2020-11-05","objectID":"/009_fish_omf/:4:89","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"90 tweetjay ","date":"2020-11-05","objectID":"/009_fish_omf/:4:90","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"91 uggedal ","date":"2020-11-05","objectID":"/009_fish_omf/:4:91","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"92 will ","date":"2020-11-05","objectID":"/009_fish_omf/:4:92","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"93 wolf-theme ","date":"2020-11-05","objectID":"/009_fish_omf/:4:93","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"94 yimmy ","date":"2020-11-05","objectID":"/009_fish_omf/:4:94","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"95 zeit ","date":"2020-11-05","objectID":"/009_fish_omf/:4:95","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"96 zephyr ","date":"2020-11-05","objectID":"/009_fish_omf/:4:96","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"97 zish ","date":"2020-11-05","objectID":"/009_fish_omf/:4:97","tags":["fish","oh-my-fish","主题"],"title":"Fish Shell 的简单使用和Oh-my-fish主题的展示","uri":"/009_fish_omf/"},{"categories":["备份"],"content":"一、保证已安装Typora Typora官网 ","date":"2020-10-26","objectID":"/008_win_right_md/:1:0","tags":["Windows","右键","MrakDown"],"title":"Windows系统右键增加新建MrakDown和sh","uri":"/008_win_right_md/"},{"categories":["备份"],"content":"二、新建.reg文件并写入以下内容 Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\\.md] @=\"Typora.exe\" [HKEY_CLASSES_ROOT\\.md\\ShellNew] \"NullFile\"=\"\" [HKEY_CLASSES_ROOT\\Typora.exe] @=\"Markdown\" [HKEY_CLASSES_ROOT\\.sh] @=\"notepad3.exe\" [HKEY_CLASSES_ROOT\\.sh\\ShellNew] \"NullFile\"=\"\" [HKEY_CLASSES_ROOT\\notepad3.exe] @=\"sh\" ","date":"2020-10-26","objectID":"/008_win_right_md/:2:0","tags":["Windows","右键","MrakDown"],"title":"Windows系统右键增加新建MrakDown和sh","uri":"/008_win_right_md/"},{"categories":["备份"],"content":"三、运行以上文件 以下为效果图 本文代码源自于Windows下右键新建.md文件教程 ","date":"2020-10-26","objectID":"/008_win_right_md/:3:0","tags":["Windows","右键","MrakDown"],"title":"Windows系统右键增加新建MrakDown和sh","uri":"/008_win_right_md/"},{"categories":["教程"],"content":" 本文摘自于Git 多远程仓库管理：GitHub 与 Gitee 双向同步，详细用法请前往查看 ","date":"2020-10-24","objectID":"/007_github_gitee_sync/:0:0","tags":["GitHub","Gitee","同步"],"title":"GitHub与Gitee同步本地推送","uri":"/007_github_gitee_sync/"},{"categories":["教程"],"content":"一、主仓库和镜像仓库 两仓库可同时控制 # 获取本地仓库已关联仓库 git remote -v # 添加另一个远程仓库到 oring git remote set-url --add origin git@github.com:rentianyu/action.git ","date":"2020-10-24","objectID":"/007_github_gitee_sync/:1:0","tags":["GitHub","Gitee","同步"],"title":"GitHub与Gitee同步本地推送","uri":"/007_github_gitee_sync/"},{"categories":["教程"],"content":"二、分别拉取和推送 两仓库分别控制 # 添加 GitHub 远程仓库并命名为 github git remote add github git@github.com:rentianyu/action.git # 推送 GitHub 仓库 git push github mster # 推送原仓库 git push # 或者 git push origin mster ","date":"2020-10-24","objectID":"/007_github_gitee_sync/:2:0","tags":["GitHub","Gitee","同步"],"title":"GitHub与Gitee同步本地推送","uri":"/007_github_gitee_sync/"},{"categories":["教程"],"content":"使用curl实现坚果云上传下载坚果云，命令适用于webdav、ftp等 1.txt —- 代表本地文件 https://dav.jianguoyun.com/dav/ —- 坚果云根目录 示例代码是根目录下新建的test目录 user:pass —- 邮箱:应用密码 应用密码获取：登录坚果云 → 账户信息 → 安全选项 → 第三方应用管理 → 添加应用 本命令全部没有输出 ","date":"2020-08-14","objectID":"/005_webdav_by_curl/:0:0","tags":["curl","webdav","坚果云"],"title":"curl命令实现坚果云上传下载","uri":"/005_webdav_by_curl/"},{"categories":["教程"],"content":"1. 上传文件 # 单文件版 curl -s -u 'user:pass' -T '1.txt' 'https://dav.jianguoyun.com/dav/test/' # 当前目录文件 for i in $(ls) do curl -s -u 'user:pass' -T \"$i\" 'https://dav.jianguoyun.com/dav/test/' done ","date":"2020-08-14","objectID":"/005_webdav_by_curl/:1:0","tags":["curl","webdav","坚果云"],"title":"curl命令实现坚果云上传下载","uri":"/005_webdav_by_curl/"},{"categories":["教程"],"content":"2. 下载文件 # 单文件版 curl -s -u 'user:pass' 'https://dav.jianguoyun.com/dav/test/1.txt' -o '1.txt' # 单目录版 for i in $( curl -s -u 'user:pass' 'https://dav.jianguoyun.com/dav/test/' -X PROPFIND | grep -o 'name\u003e[^\u003c]*'| grep -o '[^\u003e]*$' ) do curl -s -u 'user:pass' \"https://dav.jianguoyun.com/dav/test/$i\" -o $i done ","date":"2020-08-14","objectID":"/005_webdav_by_curl/:2:0","tags":["curl","webdav","坚果云"],"title":"curl命令实现坚果云上传下载","uri":"/005_webdav_by_curl/"},{"categories":["教程"],"content":"3. 删除文件 curl -s -u 'user:pass' 'https://dav.jianguoyun.com/dav/test/1.txt' -X DELETE ","date":"2020-08-14","objectID":"/005_webdav_by_curl/:3:0","tags":["curl","webdav","坚果云"],"title":"curl命令实现坚果云上传下载","uri":"/005_webdav_by_curl/"},{"categories":["教程"],"content":"4. 列出当前目录文件夹及文件 curl -s -u 'user:pass' 'https://dav.jianguoyun.com/dav/test/' -X PROPFIND | grep -o 'name\u003e[^\u003c]*'| grep -o '[^\u003e]*$' ","date":"2020-08-14","objectID":"/005_webdav_by_curl/:4:0","tags":["curl","webdav","坚果云"],"title":"curl命令实现坚果云上传下载","uri":"/005_webdav_by_curl/"},{"categories":["句子"],"content":" 总会有人，不同于其他人，聚在一起，分享美好的语句。 愿：所行化坦途，所求皆如愿。 ","date":"2020-08-14","objectID":"/006_sentence_01/:0:0","tags":["美感","欣赏","句子"],"title":"收集句子__01","uri":"/006_sentence_01/"},{"categories":["句子"],"content":"2020年9月10日 img { display: block; margin: 0 auto; } ","date":"2020-08-14","objectID":"/006_sentence_01/:0:1","tags":["美感","欣赏","句子"],"title":"收集句子__01","uri":"/006_sentence_01/"},{"categories":["备份"],"content":"一、kms激活Windows系统，(推荐) ","date":"2020-08-05","objectID":"/004_activate/:1:0","tags":["激活","Windows","office"],"title":"命令行激活Windows系统和Office","uri":"/004_activate/"},{"categories":["备份"],"content":"1.1 数字激活Windows 10 下载 云萌 Windows 10 激活工具 激活 参考网址：CMWTAT_Digital_Edition ","date":"2020-08-05","objectID":"/004_activate/:1:1","tags":["激活","Windows","office"],"title":"命令行激活Windows系统和Office","uri":"/004_activate/"},{"categories":["备份"],"content":"1.2 kms激活Windows系统 # 以管理员权限的CMD或PowerShell运行以下命令 slmgr /skms kms.v0v.bid slmgr /ato 参考网址：Windows系统一句命令激活 ","date":"2020-08-05","objectID":"/004_activate/:1:2","tags":["激活","Windows","office"],"title":"命令行激活Windows系统和Office","uri":"/004_activate/"},{"categories":["备份"],"content":"二、激活Office 只适用于默认安装位置的64位版本的2010、2013、2016、2019、365版本 # 以管理员权限的CMD或PowerShell运行以下命令 cd \"C:\\Program Files\\Microsoft Office\\Office*\" cscript ospp.vbs /sethst:kms.v0v.bid cscript ospp.vbs /act 参考网址：Windows系统一句命令激活 安装Office：Office Tool Plus ","date":"2020-08-05","objectID":"/004_activate/:2:0","tags":["激活","Windows","office"],"title":"命令行激活Windows系统和Office","uri":"/004_activate/"},{"categories":["教程"],"content":"Typora 使用 Gitee 图床 本教程以Gitee做图床为例 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:0:0","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"1. 准备软件 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:1:0","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"1.1 安装nodejs (https://nodejs.org/zh-cn/) ","date":"2020-08-04","objectID":"/003_pic_for_typora/:1:1","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"1.2 Typora里安装PiCGo-Core命令行版 Typora里，按ctrl＋逗号键 → 图像 → PiCGo-Core(command line) → 下载 （建议使用代理） ","date":"2020-08-04","objectID":"/003_pic_for_typora/:1:2","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"2. 安装pic-go插件并打开配置文件，也就是执行以下命令 # cmd里执行以下两个命令 %APPDATA%\\Typora\\picgo\\win64\\picgo.exe install gitee-uploader %UserProfile%\\.picgo\\config.json 最小化打开的窗口，不要关闭 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:2:0","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"3. 获取Gitee的用户名、仓库和私人令牌 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:3:0","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"3.1. 注册并登录Gitee (https://gitee.com)，记录用户名 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:3:1","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"3.2. 右上角+，新建仓库（建一个公开项目），记录仓库名 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:3:2","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"3.3. 点击创建私人令牌 ，记录私人令牌的值 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:3:3","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"3. 修改配置文件 将以下内容全部复制并替换到第一步里打开的文件，并把第二步生成的值修改为指定值，ctrl+s保存文件退出 { \"picBed\": { \"current\": \"gitee\", \"uploader\": \"gitee\", \"gitee\": { \"branch\": \"master\", \"customPath\": \"yearMonth\", \"customUrl\": \"\", \"path\": \"\", \"repo\": \"用户名/仓库名\", \"token\": \"私人令牌\" }, \"transformer\": \"path\" }, \"picgoPlugins\": { \"picgo-plugin-gitee-uploader\": true, \"picgo-plugin-github-plus\": true }, \"picgo-plugin-gitee-uploader\": { \"lastSync\": \"2020-04-30 01:41:13\" }, \"picgo-plugin-github-plus\": { \"lastSync\": \"2020-04-07 11:09:08\" } } ","date":"2020-08-04","objectID":"/003_pic_for_typora/:4:0","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"4. 使用方法 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:5:0","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"4.1 图片直接拖入到Typora里，并右击图片上传 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:5:1","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"4.2 QQ或者微信截图之后，到Typora里粘贴，右击图片上传 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:5:2","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"5. 本项目说明及手机端图床软件推荐 PiCGo-Core 不仅支持Gitee还支持GitHub、微博、七牛云、腾讯云COS、又拍云、阿里云OSS、SM.MS、imgur等，具体配置我就不提供了，请自行搜索 手机推荐咕咚云图上传图片做图床，目前支持的图床如下 ","date":"2020-08-04","objectID":"/003_pic_for_typora/:6:0","tags":["Typora","Gitee","图床"],"title":"Typora使用图床——以Gitee做图床为例","uri":"/003_pic_for_typora/"},{"categories":["教程"],"content":"Ubuntu 定时任务 ","date":"2020-08-04","objectID":"/002_cron/:0:0","tags":["Ubuntu","cron","定时任务"],"title":"Ubuntu定时任务之crontab","uri":"/002_cron/"},{"categories":["教程"],"content":"1. crontab有关命令 # 重启cron服务 service cron restart # 编辑定时任务（重启cron服务才会生效） crontab –e # 列出定时任务 crontab –l ","date":"2020-08-04","objectID":"/002_cron/:1:0","tags":["Ubuntu","cron","定时任务"],"title":"Ubuntu定时任务之crontab","uri":"/002_cron/"},{"categories":["教程"],"content":"2. 定时任务语法 minute hour day month week command 分 时 日 月 周 命令 # 举例：每天8点执行命令 00 08 * * * sh /root/hello.sh 说明： minute： 表示分钟，可以是从 0 到 59 之间的任何整数 hour：表示小时，可以是从 0 到 23 之间的任何整数 day：表示日期，可以是从 1 到 31 之间的任何整数 month：表示月份，可以是从 1 到 12 之间的任何整数 week：表示星期几，可以是从 0 到 7 之间的任何整数，这里的 0 或 7 代表星期日 command：要执行的命令，可以是系统命令，也可以是自己编写的脚本文件 在以上各个字段中，还可以使用以下特殊字符： 星号（\\*）：代表所有可能的值，例如 month 字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作 逗号（,）：可以用逗号隔开的值指定一个列表范围，例如，“1,2,5,7,8,9” 中杠（-）：可以用整数之间的中杠表示一个整数范围，例如“2-6”表示“2,3,4,5,6” 正斜线（/）：可以用正斜线指定时间的间隔频率，例如“0-23/2”表示每两小时执行一次。同时正斜线可以和星号一起使用， 例如`/10，如果用在 minute 字段，表示每十分钟执行一次 ","date":"2020-08-04","objectID":"/002_cron/:2:0","tags":["Ubuntu","cron","定时任务"],"title":"Ubuntu定时任务之crontab","uri":"/002_cron/"},{"categories":["备份"],"content":"scoop 自用教程 代码如下 # 管理员运行powershell # 设置powershell代理，只适用于v2ray,其他请修改相应端口 $Env:http_proxy=\"http://127.0.0.1:10809\" $Env:https_proxy=\"http://127.0.0.1:10809\" # 安装 scoop Set-ExecutionPolicy RemoteSigned -scope CurrentUser iwr -useb get.scoop.sh | iex # 或 Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh') scoop checkup # 检查错误 # 安装 scoop install git sudo sudo scoop install sudo -g # 别名 scoop alias add as 'scoop update *|scoop cache rm *|scoop cleanup *' '更新清除' scoop alias add l 'scoop list' '列表' # 检查已添加的别名 scoop alias list -v # 先添加bucket scoop bucket add extras scoop bucket add nirsoft scoop bucket add dorado https://github.com/h404bi/dorado scoop bucket add Ash258 'https://github.com/Ash258/Scoop-Ash258.git' scoop bucket add nerd-fonts scoop bucket add nonportable # scoop 安装更纱字体 sudo scoop install SarasaGothic-SC -g # scoop 安装软件 scoop install 7zip adb aria2 aria-ng-gui bilibili-livehime busybox clash-for-windows dark dismplusplus ffmpeg firefox git Hack-NF hugo-extended innounp jq lessmsi listary mobaxterm neatdownloadmanager nmap nodejs notepad3 officetoolplus pandoc python qtscrcpy rclone SarasaGothic-SC shadowsocksr-csharp Snipaste spacesniffer teamviewer trafficmonitor v2rayn vim vscode winscp ","date":"2020-08-04","objectID":"/001_scoop/:0:0","tags":["scoop","电脑","自用"],"title":"scoop 使用教程","uri":"/001_scoop/"},{"categories":["祝福"],"content":"这是一段祝福 愿一切 所行化坦途，所求皆如愿","date":"2020-08-02","objectID":"/000_benediction/:0:0","tags":["祝福"],"title":"所行化坦途，所求皆如愿","uri":"/000_benediction/"},{"categories":null,"content":"小贝塔有关网址 本人利用空闲时间写一些自己遇到问题的解决教程和心得，欢迎大家关注！！！ 平台 地址 微信公众号 小贝塔教程资源 网站 https://xiao_beita.gitee.io 网盘 https://file.beita.workers.dev Github https://github.com/rentianyu QQ群 773276432 哔哩哔哩 小贝塔i 酷安 小贝塔 推荐电脑软件 https://shimo.im/docs/T9JPvy9dVkrwGx83 欢迎关注我的微信公众号！！！ 最后我还是把网站建起来了 最后我还是用的这个喜欢的主题 最后我还是要写博客的 最后的我却渐行渐远 ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"关于 LoveIt","uri":"/about/"}]